* Milestone 1: Zotero interface 
Goal: Interface with Zotero and be able to get useful information from it such as papers (pdfs), some metadata, etc. For now, assume read-only access. In the future, the recommendation system activity etc can also be embedded into the notes/tags and other paper meta-data. 

** Document processing. 
- Zotero already does decent PDF processing to extract title, authors etc.
- But in some cases, we may want to also extract the highlighted text and recommend small snippets of papers. So figure out how to do that 

* Milestone 2: Prototype for paper recommendations 
Goal: Get a first prototype ready (simple web UI). This should go over a zotero DB and recommend some papers to read based on a simple recommendation engine 

** Recommendation Engine 
- Features and inputs: time added, recently read, notes, area, tags, conference, user input (upvote/downvote)

* Milestone 3: Additional data sources 
- Git repositories and org-mode/latex commits
- Conference proceedings 

** User model? 
- To drive the recommendation data
- Model user behavior somehow? Interest, forgetting, activity bursts, etc?
- 

* Milestone 4: Streaming and Implementation optimizations  
- Handle changing data sources? 


* Timeline 

|     | Avg Time | Max Time |
|-----+----------+----------|
| MS1 | 2 weeks  | 3 weeks  |
|-----+----------+----------|
| MS2 | 2 weeks  | 4 weeks  |
|-----+----------+----------|
| MS3 | 2 weeks  | 4 weeks  |

* June 24
- UI tweaks: tags, streams, more user input. 
  - Score slider; Snooze till time ; Search (using vector similarity) ; tags(?) 
- More data sources: ACM D/L, web scraping, git commits
- *Start with ACM* https://dl.acm.org/doi/proceedings/10.1145/3442188 
  - USENIX: https://www.usenix.org/conference/nsdi21/technical-sessions 
  - Look for ACM scraping or APIs. 
- Data model and format for unstructured data
- Recommendation System Cold start mainly for collaborative filtering 
